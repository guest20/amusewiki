name: linux

on:
  push:
    branches: ['*']
    tags-ignore: ['*']
  pull_request:
  
env:
  # test_runner: prove, make-test, matrix 
  test_runner: matrix
  
  OREPAN_VERSION: 0.08
  # DBIC_TRACE: 4
  # DBIC_TRACE_PROFILE: console_monochrome
  
  DEBIAN_FRONTEND: noninteractive

  CPAN_MIRROR: http://www.cpan.org
  VERBOSE: '' # --verbose
     


jobs:
#=
#
# build a package, and see what lintian thinks about it 
  dpkg-buildpackage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - run: id
      - run: uname -a 
      - run: lsb_release -a 
      
      - run: |
          docker run  \
          -e DEBIAN_FRONTEND=noninteractive \
          -v `pwd`:`pwd` -w`pwd` debian:bullseye sh -c '
          echo "== debian\n";
            id ;
            uname -a ;
            lsb_release -a ;
          
          echo "== tools\n";
           (apt-get update || apt-get update || apt-get update) && 
            apt-get install -y ca-certificates wget gnupg2 devscripts lintian apt-utils bash-completion;
            
          echo "== steps from https://packages.amusewiki.org/\n";
            wget --no-verbose -O - https://packages.amusewiki.org/amusewiki.gpg.key | apt-key add - ;  # APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1
            echo "deb http://packages.amusewiki.org/debian bullseye main"   > /etc/apt/sources.list.d/amusewiki.list ;
            
          echo "== update\n";
            apt-get update;
            
          echo "== confirm the source\n";
            echo "=== key list\n";     apt-key list;
            echo "=== policy\n";       apt-cache policy;
            echo "=== sources list\n"; cat /etc/apt/sources.list;
           
          echo "== build the package\n";
            mk-build-deps --install --tool="apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends --yes" debian/control && 
            (rm -fr t/; mkdir t/; echo "use Test::More; ok(1, q[running the tests takes time.]); done_testing" > "t/0-basic.t" ) &&
            dpkg-buildpackage --build=all; 
            
          echo "== lint the package\n";
            (ls -d ../*.deb |grep -v "[-]build-deps$" | while read deb ; do lintian $deb | tee lintian-$deb.txt; done)
          '
          cat lintian*.txt > $GITHUB_OUTPUT
        
